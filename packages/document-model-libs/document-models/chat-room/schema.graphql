scalar Amount_Tokens
scalar EthereumAddress
scalar Amount_Percentage
scalar EmailAddress
scalar Date
scalar DateTime
scalar URL
scalar Amount_Money
scalar OLabel
scalar Currency
scalar PHID
scalar OID
type ChatRoomState {
  id: OID!
  name: String!
  description: String
  createdAt: DateTime!
  createdBy: ID!
  messages: [Message!]!
}

type Message {
  id: OID!
  sender: Sender!
  content: String
  sentAt: DateTime!
  reactions: [Reaction!]
}

type Sender {
  id: ID!
  name: String
  avatarUrl: URL
}

type Reaction {
  type: ReactionType!         # Type of reaction (one of the predefined emoji)
  reactedBy: [ID!]!             # Agent ID of the user who reacted
}

enum ReactionType {
  THUMBS_UP
  THUMBS_DOWN
  LAUGH
  HEART
  CRY
}



# general_operations

input AddMessageInput {
  messageId: OID!        # ID of the message that is being added
  sender: Sender!          # ID of the user sending the message
  content: String!        # Content of the message
  sentAt: DateTime!
}

input AddEmojiReactionInput {
  messageId: OID!         # ID of the message to which the reaction is being added
  reactedBy: ID!         # ID of the user adding the reaction
  type: ReactionType!     # Type of the reaction (emoji)  
}

input RemoveEmojiReactionInput {
  messageId: OID!   # ID of the message to which the reaction is being removed
  senderId: ID!     # ID of the user that is removing the reaction
  type: ReactionType!   # Type of the reaction (emoji)  
}

input EditChatNameInput {
  name: String!
}

input EditChatDescriptionInput {
  description: String!
}