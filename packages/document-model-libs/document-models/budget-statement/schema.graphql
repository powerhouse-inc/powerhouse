scalar DateTime
scalar Attachment

input LineItemInput {
  group: LineItemGroup
  headcountExpense: Boolean
  category: LineItemCategory
  budgetCap: Float
  actual: Float
  payment: Float
  forecast: [LineItemForecast!]
  comment: String
}

type LineItemGroup {
  ref: String!
  id: String!
  title: String!
  color: String!
}

type LineItemCategory {
  ref: String!
  id: String!
  title: String!
}

type LineItemForecast {
  month: String!
  value: Float!
  budgetCap: Float!
}

type LineItem {
  group: LineItemGroup
  headcountExpense: Boolean!
  category: LineItemCategory
  budgetCap: Float
  actual: Float
  payment: Float
  forecast: [LineItemForecast!]!
  comment: String
}

type Account {
  address: String! # TODO Address
  name: String!
  lineItems: [LineItem!]!
}

type Owner {
  ref: String
  id: String
  title: String
}

type Vesting {
  key: String!
  date: String!
  amount: String!
  amountOld: String!
  comment: String!
  currency: String!
  vested: Boolean!
}

type FtesForecast {
  month: String!
  value: Float!
}

type Ftes {
  value: Float!
  forecast: [FtesForecast!]!
}

enum AuditReportStatus {
  Approved
  ApprovedWithComments
  NeedsAction
  Escalated
}

type AuditReport {
  timestamp: DateTime!
  report: Attachment! # TODO enforce attachment
  status: AuditReportStatus!
}

type CommentAuthor {
  ref: String
  id: String
  username: String
  roleLabel: String
}

enum BudgetStatus {
  Draft
  Review
  Final
  Escalated
}

type Comment {
  key: String!
  author: CommentAuthor!
  comment: String!
  timestamp: DateTime!
  status: BudgetStatus!
}

type BudgetStatementState {
  owner: Owner
  month: String
  quoteCurrency: String
  accounts: [Account!]!
  vesting: [Vesting!]!
  ftes: Ftes
  auditReports: [AuditReport!]!
  comments: [Comment!]!
}

type BudgetStatementLocalState

# account

input AddAccountInput {
  address: String!
  name: String
  lineItems: [LineItemInput!]
}

input UpdateAccountInput {
  address: String!
  name: String
  lineItems: [LineItem!]
}

input DeleteAccountInput {
  account: String!
}

input SortAccountsInput {
  accounts: [String!]!
}

# line-item

input AddLineItemInput {
  accountId: ID!
  group: LineItemGroup
  headcountExpense: Boolean
  category: LineItemCategory
  budgetCap: Float
  actual: Float
  payment: Float
  forecast: [LineItemForecast!]
  comment: String
}

input LineItemUpdateInput {
  group: String
  category: String
  headcountExpense: Boolean
  budgetCap: Float
  actual: Float
  payment: Float
  forecast: [LineItemForecast!]
  comment: String
}

input UpdateLineItemInput {
  accountId: ID!
  group: String
  category: String
  headcountExpense: Boolean
  budgetCap: Float
  actual: Float
  payment: Float
  forecast: [LineItemForecast!]
  comment: String
}

input DeleteLineItemInput {
  accountId: ID!
  group: String
  category: String
}

input LineItemsSortInput {
  group: String
  category: String
}

input SortLineItemsInput {
  accountId: ID!
  lineItems: [LineItemsSortInput!]!
}

# base

input SetOwnerInput {
  ref: String
  id: String
  title: String
}

input SetMonthInput {
  month: String!
}

input FtesForecastInput {
  month: String!
  value: Float!
}

input SetFtesInput {
  value: Float!
  forecast: [FtesForecastInput!]!
}

input SetQuoteCurrencyInput {
  quoteCurrency: String!
}

# audit

input AddAuditReportInput {
  timestamp: DateTime
  report: Attachment!
  status: AuditReportStatus!
}

input DeleteAuditReportInput {
  report: String!
}

# comment

input CommentAuthorInput {
  ref: String
  id: String
  username: String
  roleLabel: String
}

input AddCommentInput {
  key: String
  author: CommentAuthorInput
  comment: String!
  timestamp: DateTime
  status: BudgetStatus
}

input UpdateCommentInput {
  key: String!
  author: CommentAuthorInput
  comment: String
  timestamp: DateTime
  status: BudgetStatus
}

input DeleteCommentInput {
  comment: String!
}

# vesting

input AddVestingInput {
  key: String
  date: String
  amount: String
  amountOld: String
  comment: String
  currency: String
  vested: Boolean
}

input UpdateVestingInput {
  key: String!
  date: String
  amount: String
  amountOld: String
  comment: String
  currency: String
  vested: Boolean
}

input DeleteVestingInput {
  vesting: String!
}
