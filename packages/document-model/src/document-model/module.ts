import type { DocumentModelDocumentModelModule } from "document-model";
import {
  documentModelCreateDocument,
  documentModelCreateState,
  documentModelFileExtension,
  documentModelLoadFromFile,
  documentModelLoadFromInput,
  documentModelReducer,
  documentModelSaveToFile,
  documentModelSaveToFileHandle,
  documentModelState,
} from "document-model";
import {
  addChangeLogItem,
  addModule,
  addOperation,
  addOperationError,
  addOperationExample,
  addStateExample,
  deleteChangeLogItem,
  deleteModule,
  deleteOperation,
  deleteOperationError,
  deleteOperationExample,
  deleteStateExample,
  moveOperation,
  releaseNewVersion,
  reorderChangeLogItems,
  reorderModuleOperations,
  reorderModules,
  reorderOperationErrors,
  reorderOperationExamples,
  reorderStateExamples,
  setAuthorName,
  setAuthorWebsite,
  setInitialState,
  setModelDescription,
  setModelExtension,
  setModelId,
  setModelName,
  setModuleDescription,
  setModuleName,
  setOperationDescription,
  setOperationErrorCode,
  setOperationErrorDescription,
  setOperationErrorName,
  setOperationErrorTemplate,
  setOperationName,
  setOperationReducer,
  setOperationSchema,
  setOperationScope,
  setOperationTemplate,
  setStateSchema,
  updateChangeLogItem,
  updateOperationExample,
  updateStateExample,
} from "document-model";

const actions = {
  setAuthorName,
  setAuthorWebsite,
  setModelName,
  setModelId,
  setModelExtension,
  addModule,
  setModuleName,
  setModuleDescription,
  setStateSchema,
  addChangeLogItem,
  updateChangeLogItem,
  deleteChangeLogItem,
  reorderChangeLogItems,
  releaseNewVersion,
  addOperation,
  setOperationName,
  setOperationSchema,
  setOperationScope,
  setOperationTemplate,
  setOperationReducer,
  moveOperation,
  deleteOperation,
  reorderModuleOperations,
  setOperationDescription,
  setOperationErrorCode,
  setOperationErrorDescription,
  setOperationErrorName,
  setOperationErrorTemplate,
  addOperationError,
  deleteOperationError,
  reorderOperationErrors,
  addOperationExample,
  deleteOperationExample,
  updateOperationExample,
  reorderOperationExamples,
  addStateExample,
  deleteStateExample,
  updateStateExample,
  reorderStateExamples,
  setInitialState,
  deleteModule,
  reorderModules,
  setModelDescription,
};

const utils = {
  fileExtension: documentModelFileExtension,
  createState: documentModelCreateState,
  createDocument: documentModelCreateDocument,
  loadFromInput: documentModelLoadFromInput,
  saveToFile: documentModelSaveToFile,
  saveToFileHandle: documentModelSaveToFileHandle,
  loadFromFile: documentModelLoadFromFile,
};
export const documentModelDocumentModelModule: DocumentModelDocumentModelModule =
  {
    reducer: documentModelReducer,
    documentModel: documentModelState,
    actions,
    utils,
  };
