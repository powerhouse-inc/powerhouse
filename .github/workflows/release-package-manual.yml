name: Release Package Manual

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The NPM tag to apply to the release. Use 'latest' for Production release."
        required: false
        type: string
        default: "dev"

env:
  NX_ISOLATE_PLUGINS: false

jobs:
  test:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install
        shell: bash

      - name: Build packages and studio
        run: pnpm nx run-many --target='build' --all
        shell: bash

      - name: Print Environment Info
        run: pnpm nx report
        shell: bash

      - name: git config
        shell: bash
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "-"

      - name: Update pkg version
        run: pnpm nx release --projects='packages/*,apps/connect,clis/*' --skip-publish
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Update pkg version for Apps and Clis
        run: pnpm nx release --projects='clis/*,apps/connect' --skip-publish
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Publish to npm
        run: pnpm nx release publish --projects='apps/connect,packages/*,clis/*' --tag=${{ inputs.tag }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
