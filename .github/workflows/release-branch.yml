name: Release Branch

on: 
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: 'Select version type (semantic-versioning will use calculated version from commit messages)'
        options:
          - semantic-versioning
          - prerelease
          - patch
          - minor
          - major
      dry-run:
        type: boolean
        default: false
      verbose:
        type: boolean
        default: false
  schedule:
    - cron: '0 2 * * *'

env:
  NX_ISOLATE_PLUGINS: false
  GITHUB_TOKEN: ${{ secrets. PATNAME }}

jobs:
  build-and-publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 10
    steps:
      - name: Set version and tag if branch is main or release
        run: |
          if [[ "${{ inputs.version }}" == "semantic-versioning" ]]; then
            echo "VERSION=" >> $GITHUB_ENV
          else
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          fi
          
          if [[ "${{ github.ref_name }}" == release* ]]; then
            echo "VERSION=" >> $GITHUB_ENV
            echo "BRANCH_RELEASE=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install
        shell: bash

      - name: Build packages and studio
        run: pnpm nx run-many --target='build' --all --no-cloud
        shell: bash

      - name: Print Environment Info
        run: pnpm nx report
        shell: bash

      - name: git config
        shell: bash
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "-"

      - name: Clean up non-dev tags (main branch only)
        if: github.ref_name == 'main'
        shell: bash
        run: |
          git tag | grep -v '^v[0-9]\+\.[0-9]\+\.[0-9]\+-dev\.[0-9]\+$' | xargs -r git tag -d

      - name: Update pkg version and publish to npm
        run: npx tsx tools/scripts/release.ts --dry-run=${{ inputs.dry-run }} --version=${{ env.VERSION }} --branch-release=${{ env.BRANCH_RELEASE }} --verbose=${{ inputs.verbose }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.PATNAME }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      # - name: Publish to npm
      #   run: pnpm nx release publish --projects='apps/*,packages/*,clis/*' --tag=${{ env.TAG }}
      #   shell: bash
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
