name: Build and Publish Docker Images

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io

jobs:
  connect:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/connect
          tags: |
            type=raw,value=latest,enable={{startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-dev') && !contains(github.ref, '-staging')}}
            type=raw,value=dev,enable={{startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-dev')}}
            type=raw,value=staging,enable={{startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-staging')}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/connect
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TAG=${{ 
              startsWith(github.ref, 'refs/tags/v') && (
                contains(github.ref, '-dev') && 'dev' || 
                contains(github.ref, '-staging') && 'staging' || 
                'latest'
              )
            }}

  switchboard:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/switchboard
          tags: |
            type=raw,value=latest,enable={{startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-dev') && !contains(github.ref, '-staging')}}
            type=raw,value=dev,enable={{startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-dev')}}
            type=raw,value=staging,enable={{startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-staging')}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/switchboard
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TAG=${{ 
              startsWith(github.ref, 'refs/tags/v') && (
                contains(github.ref, '-dev') && 'dev' || 
                contains(github.ref, '-staging') && 'staging' || 
                'latest'
              )
            }} 