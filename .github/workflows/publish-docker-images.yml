name: Build and Publish Docker Images

on:
  workflow_run:
    workflows: [Release Branch]
    types:
      - completed

env:
  REGISTRY: ghcr.io

jobs:
  connect:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set last tag
        run: echo "GITHUB_TAG=$(git tag --sort=version:refname | tail -n 1)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PATNAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/connect
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/connect:${{ env.GITHUB_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TAG=${{ 
              startsWith(env.GITHUB_TAG, 'v') && (
                contains(env.GITHUB_TAG, '-dev') && 'dev' || 
                contains(env.GITHUB_TAG, '-staging') && 'staging' || 
                'latest'
              )
            }}

  switchboard:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set last tag
        run: echo "GITHUB_TAG=$(git tag --sort=version:refname | tail -n 1)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PATNAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/switchboard
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/switchboard:${{ env.GITHUB_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TAG=${{ 
              startsWith(env.GITHUB_TAG, 'v') && (
                contains(env.GITHUB_TAG, '-dev') && 'dev' || 
                contains(env.GITHUB_TAG, '-staging') && 'staging' || 
                'latest'
              )
            }} 