name: Full Managed Release Workflow (DO NOT USE UNLESS YOU KNOW WHAT YOU ARE DOING)

on: 
  workflow_dispatch:
    inputs:
      version:
        type: string
      tag:
        type: string
      dry-run:
        type: boolean
        default: true
      verbose:
        type: boolean
        default: false
      skip-publish:
        type: boolean
        default: false
      publish-only:
        type: boolean
        default: false

env:
  NX_ISOLATE_PLUGINS: false
  VERSION: ${{ inputs.version }}
  TAG: ${{ inputs.tag ||  'dev'  }}
  DRYRUN: ${{ inputs.dry-run }}

jobs:
  build-and-publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 10
    steps:
      - name: Print branch name
        run: echo "Branch name is ${{ github.ref_name }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install
        shell: bash

      - name: Build packages and studio
        run: pnpm nx run-many --target='build' --all --no-cloud
        shell: bash

      - name: Print Environment Info
        run: pnpm nx report
        shell: bash

      - name: git config
        shell: bash
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "-"

      - name: Update pkg version and publish to npm
        run: npx tsx tools/scripts/release.ts --version=${{ inputs.version }} --tag=${{ inputs.tag }} --dry-run=${{ inputs.dry-run }} --skip-publish=${{ inputs.skip-publish }} --publish-only=${{ inputs.publish-only }} --verbose=${{ inputs.verbose }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      # - name: Publish to npm
      #   run: pnpm nx release publish --projects='apps/*,packages/*,clis/*' --tag=${{ env.TAG }}
      #   shell: bash
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
