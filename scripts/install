#!/usr/bin/env bash

# Detect operating system
if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
    # Windows
    echo "Downloading Windows installation script..."
    curl -o install.ps1 https://raw.githubusercontent.com/powerhouse-inc/powerhouse/refs/heads/main/scripts/install.ps1
    if [ $? -eq 0 ]; then
        powershell -ExecutionPolicy Bypass -File install.ps1
        rm install.ps1
    else
        echo "Error: Failed to download Windows installation script"
        exit 1
    fi
else
    # Update system packages
    sudo apt update
    sudo DEBIAN_FRONTEND=noninteractive apt upgrade -y

    # Install and configure NVM
    if ! command -v nvm &> /dev/null; then
        echo "Installing nvm..."
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    else
        echo "nvm is already installed"
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    fi

    # Install and configure Node.js
    if ! command -v node &> /dev/null; then
        echo "Installing Node.js..."
        nvm install 22
    else
        echo "Node.js is already installed: $(node --version)"
    fi

    # Install and configure pnpm
    if ! command -v pnpm &> /dev/null; then
        echo "Installing pnpm..."
        npm install -g pnpm
        export PNPM_HOME="$HOME/.local/share/pnpm"
        export PATH="$PNPM_HOME:$PATH"
    else
        echo "pnpm is already installed: $(pnpm --version)"
        export PNPM_HOME="$HOME/.local/share/pnpm"
        export PATH="$PNPM_HOME:$PATH"
    fi

    # Verify pnpm installation
    if ! command -v pnpm &> /dev/null; then
        echo "Error: pnpm installation failed"
        exit 1
    fi

    # Install ph-cmd
    echo "Installing latest version of ph-cmd..."
    pnpm add -g ph-cmd@latest

    # Set up environment variables
    export PNPM_HOME="$HOME/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"

    # Configure shell
    SHELL_CONFIG="$HOME/.bashrc"
    if [ -f "$HOME/.zshrc" ]; then
        SHELL_CONFIG="$HOME/.zshrc"
    fi

    # Add NVM configuration if not present
    if ! grep -q "export NVM_DIR" "$SHELL_CONFIG"; then
        echo "
# NVM Configuration
export NVM_DIR=\"\$HOME/.nvm\"
[ -s \"\$NVM_DIR/nvm.sh\" ] && \. \"\$NVM_DIR/nvm.sh\"  # This loads nvm
[ -s \"\$NVM_DIR/bash_completion\" ] && \. \"\$NVM_DIR/bash_completion\"  # This loads nvm bash_completion" >> "$SHELL_CONFIG"
    fi

    # Add PNPM configuration if not present
    if ! grep -q "export PNPM_HOME" "$SHELL_CONFIG"; then
        echo "
# PNPM Configuration
export PNPM_HOME=\"\$HOME/.local/share/pnpm\"
export PATH=\"\$PNPM_HOME:\$PATH\"" >> "$SHELL_CONFIG"
    fi

    # Verify ph command installation
    if ! command -v ph &> /dev/null; then
        echo "Error: ph command not found after installation"
        echo "Please try running: source $SHELL_CONFIG"
        exit 1
    fi

    # Source the shell configuration
    source "$SHELL_CONFIG"

    # Display completion message
    echo ""
    echo "  🎉 Setup Complete! 🎉"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo "  Please try running: source $SHELL_CONFIG"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo "  Afterwards you can use Powerhouse by typing:"
    echo "  ph --version"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo ""
fi 