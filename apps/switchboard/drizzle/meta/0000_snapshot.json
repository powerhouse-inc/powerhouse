{
  "id": "eb0fc08e-397d-4d49-93c7-e4dd6f998c62",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.Challenge": {
      "name": "Challenge",
      "schema": "",
      "columns": {
        "nonce": {
          "name": "nonce",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "signature": {
          "name": "signature",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Challenge_message_key": {
          "name": "Challenge_message_key",
          "columns": [
            {
              "expression": "message",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.Session": {
      "name": "Session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "createdBy": {
          "name": "createdBy",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "referenceExpiryDate": {
          "name": "referenceExpiryDate",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "revokedAt": {
          "name": "revokedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "referenceTokenId": {
          "name": "referenceTokenId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "isUserCreated": {
          "name": "isUserCreated",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "allowedOrigins": {
          "name": "allowedOrigins",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Session_createdBy_id_key": {
          "name": "Session_createdBy_id_key",
          "columns": [
            {
              "expression": "createdBy",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Session_createdBy_fkey": {
          "name": "Session_createdBy_fkey",
          "tableFrom": "Session",
          "tableTo": "User",
          "columnsFrom": [
            "createdBy"
          ],
          "columnsTo": [
            "address"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.User": {
      "name": "User",
      "schema": "",
      "columns": {
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.searchTable": {
      "name": "searchTable",
      "schema": "",
      "columns": {
        "driveId": {
          "name": "driveId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "documentId": {
          "name": "documentId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "objectId": {
          "name": "objectId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "label": {
          "name": "label",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "searchTable_driveId_documentId_objectId_pk": {
          "name": "searchTable_driveId_documentId_objectId_pk",
          "columns": [
            "driveId",
            "documentId",
            "objectId"
          ]
        }
      },
      "uniqueConstraints": {}
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}